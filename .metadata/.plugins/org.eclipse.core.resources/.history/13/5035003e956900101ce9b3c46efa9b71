package com.digitaltolk.translation.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration;

@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfiguration{

	private static final String TOKEN = "my-secret-token"; // Replace this with a secure token

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http.csrf().disable()
            .authorizeRequests()
                .antMatchers("/api/translation/export").permitAll() // public export
                .anyRequest().authenticated()
            .and()
                .addFilter(new TokenAuthenticationFilter(authenticationManager()));
    }

    // No in-memory or DB-based auth needed, so leave it empty.
    @Override
    protected void configure(AuthenticationManagerBuilder auth) throws Exception {}
}
